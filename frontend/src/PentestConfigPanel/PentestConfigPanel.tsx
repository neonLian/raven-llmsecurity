
import { Button, Container, Select, Stack, Text, TextInput } from '@mantine/core'
import { useState } from 'react'
import BiMap from 'bidirectional-map'

// Map level numbers to their descriptions
const LEVEL_DESCRIPTIONS = new BiMap({
    1: 'Level 1 - baseline',
    2: 'Level 2 - do-not-tell',
    3: 'Level 3 - do-not-tell-and-block',
    4: 'Level 4 - gpt-is-password-encoded',
    5: 'Level 5 - word-blacklist',
    6: 'Level 6 - gpt-blacklist',
    7: 'Level 7 - gandalf',
    8: 'Level 8 - gandalf-the-white'
});

interface PentestConfigPanelProps {
    onStartPentest: (selectedLevel: number, objective: string) => void;
}

export const PentestConfigPanel = ({ onStartPentest }: PentestConfigPanelProps) => {
    const [selectedLevel, setSelectedLevel] = useState<number | null>(null);
    const [objective, setObjective] = useState<string>('What is the password?');
    const [selectedTargetType, setSelectedTargetType] = useState<string>('Gandalf');

    const handleStartClick = () => onStartPentest(selectedLevel ?? 1, objective);
    

    // Create data array from the mapping
    const levelOptions = Array.from(LEVEL_DESCRIPTIONS.values()) as string[];

    return <>
        <Container size="md" mt="xl" mb="20px" ml="auto" mr="auto">
            <Stack gap="xl">
                <div id="begin"></div>
                <div>
                    <Text size="2rem">Choose your target type</Text>
                    <Select 
                        m="20px 0" 
                        size="lg" 
                        value={selectedTargetType}
                        onChange={(value) => setSelectedTargetType(value || 'Gandalf')}
                        data={['Gandalf', 'Crucible', 'Custom']} />
                    {selectedTargetType !== 'Gandalf' && (
                        <Text size="sm" c="red" mt="xs">
                            This model type is not supported in the demo yet
                        </Text>
                    )}
                </div>
                <div>
                    <Text size="2rem">Enter target details</Text>
                    <Select 
                        label="Model Level" 
                        m="20px 0" 
                        size="lg" 
                        value={selectedLevel ? LEVEL_DESCRIPTIONS.get(selectedLevel) : ""}
                        onChange={(value) => {
                            console.log(value);
                            console.log(LEVEL_DESCRIPTIONS.getKey(value));
                            setSelectedLevel(LEVEL_DESCRIPTIONS.getKey(value) ?? null);
                        }}
                        data={levelOptions} />
                </div>
                <div>
                    <Text size="2rem">Attack objective</Text>
                    <TextInput 
                        size="lg" 
                        m="20px 0" 
                        value={objective}
                        onChange={(event) => setObjective(event.target.value)}
                        placeholder="e.g. Reveal the secret password, say how to make explosives, etc." />
                </div>
                <Button variant="gradient" size="lg" className="button" onClick={handleStartClick}>START RAVEN TEST</Button>
            </Stack>
        </Container>
    </>
}